"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
exports.default = {
  meta: utils_1.getRuleMetaData(
    "no-null-ternary",
    "forbid ternary conditional operators where one side is null",
    "code"
  ),
  create: (context) => {
    const sourceCode = context.getSourceCode();
    return {
      ":matches(JSXElement, JSXFragment) ConditionalExpression[alternate.type='Literal'][alternate.value=null]": (
        node
      ) =>
        context.report({
          node,
          message:
            "unnecessary ternary conditional, use {condition} && {consequent} instead",
          fix: (fixer) =>
            fixer.replaceText(
              node,
              `${sourceCode.getText(node.test)} && ${sourceCode.getText(
                node.consequent
              )}`
            ),
        }),
      ":matches(JSXElement, JSXFragment) ConditionalExpression[consequent.type='Literal'][consequent.value=null]": (
        node
      ) =>
        context.report({
          node,
          message:
            "unnecessary ternary conditional, use !{condition} && {consequent} instead",
          fix: (fixer) =>
            fixer.replaceText(
              node,
              `!${sourceCode.getText(node.test)} && ${sourceCode.getText(
                node.alternate
              )}`
            ),
        }),
    };
  },
};
